from langchain.tools import tool

@tool
def explain_hurst_exponent(question):
    """
    Useful for explaining the Hurst Component and its behavior in relation to the question.

    Parameters:
    question (str): A string representing the question about the Hurst exponent.

    Returns:
    str: An explanation of the Hurst exponent and its significance in analyzing time series data.
    """
    explanation = (
       [
            [
                "Document(page_content='90\\n⟨|log(t+τ)−log(t)|2⟩∼τ (10.5)\\nIf we ﬁnd behaviour that diﬀers from this relation, then we have identiﬁed either a trending\\nor a mean-reverting series. The key insight is that if any sequential price movements possess\\nnon-zero correlation (known as autocorrelation) then the above relationship is not valid. Instead\\nit can be modiﬁed to include an exponent value \" 2H\", which gives us the Hurst Exponent value\\nH:\\n⟨|log(t+τ)−log(t)|2⟩∼τ2H(10.6)\\nThus it can be seen that if H= 0.5we have a GBM, since it simply becomes the previous\\nrelation. However if H̸= 0.5then we have trending or mean-reverting behaviour. In particular:\\n•H < 0.5- The time series is mean reverting\\n•H= 0.5- The time series is a Geometric Brownian Motion\\n•H > 0.5- The time series is trending\\nIn addition to characterisation of the time series the Hurst Exponent also describes the extent\\nto which a series behaves in the manner categorised. For instance, a value of Hnear 0 is a highly\\nmean reverting series, while for Hnear 1 the series is strongly trending.\\nTo calculate the Hurst Exponent for the Amazon price series, as utilised above in the expla-\\nnation of the ADF, we can use the following Python code:\\nfrom __future __import print _function\\nfrom numpy import cumsum, log, polyfit, sqrt, std, subtract\\nfrom numpy.random import randn\\ndef hurst(ts):\\n\"\"\"Returns the Hurst Exponent of the time series vector ts\"\"\"\\n# Create the range of lag values\\nlags = range(2, 100)\\n# Calculate the array of the variances of the lagged differences\\ntau = [sqrt(std(subtract(ts[lag:], ts[:-lag]))) for lag inlags]\\n# Use a linear fit to estimate the Hurst Exponent\\npoly = polyfit(log(lags), log(tau), 1)\\n# Return the Hurst exponent from the polyfit output\\nreturn poly[0] *2.0\\n# Create a Gometric Brownian Motion, Mean-Reverting and Trending Series\\ngbm = log(cumsum(randn(100000))+1000)\\nmr = log(randn(100000)+1000)\\ntr = log(cumsum(randn(100000)+1)+1000)\\n# Output the Hurst Exponent for each of the above series\\n# and the price of Amazon (the Adjusted Close price) for\\n# the ADF test given above in the article\\nprint (\"Hurst(GBM): %s\" % hurst(gbm))\\nprint (\"Hurst(MR): %s\" % hurst(mr))\\nprint (\"Hurst(TR): %s\" % hurst(tr))', metadata={'source': '/tmp/tmpitadc2or', 'page': 98})",
                "0.29781127"
            ],
            [
                "Document(page_content='89\\nfrom datetime import datetime\\nimport pandas.io.data as web\\n# Download the Amazon OHLCV data from 1/1/2000 to 1/1/2015\\namzn = web.DataReader(\"AMZN\", \"yahoo\", datetime(2000,1,1), datetime(2015,1,1))\\n# Output the results of the Augmented Dickey-Fuller test for Amazon\\n# with a lag order value of 1\\nts.adfuller(amzn[’Adj Close’], 1)\\nHere is the output of the Augmented Dickey-Fuller test for Amazon over the period. The\\nﬁrst value is the calculated test-statistic, while the second value is the p-value. The fourth is the\\nnumber of data points in the sample. The ﬁfth value, the dictionary, contains the critical values\\nof the test-statistic at the 1, 5 and 10 percent values respectively.\\n(0.049177575166452235,\\n0.96241494632563063,\\n1,\\n3771,\\n{’1%’: -3.4320852842548395,\\n’10%’: -2.5671781529820348,\\n’5%’: -2.8623067530084247},\\n19576.116041473877)\\nSince the calculated value of the test statistic is larger than any of the critical values at the 1,\\n5 or 10 percent levels, we cannot reject the null hypothesis of γ= 0and thus we are unlikely to\\nhave found a mean reverting time series. This is in line with our tuition as most equities behave\\nakin to Geometric Brownian Motion (GBM), i.e. a random walk.\\nThis concludes how we utilise the ADF test. However, there are alternative methods for de-\\ntecting mean-reversion, particularly via the concept of stationarity , which we will now discuss.\\n10.2 Testing for Stationarity\\nA time series (or stochastic process) is deﬁned to be strongly stationary if itsjoint probability\\ndistribution is invariant under translations in time or space. In particular, and of key importance\\nfor traders, the mean and variance of the process do not change over time or space and they each\\ndo not follow a trend.\\nA critical feature of stationary price series is that the prices within the series diﬀuse from their\\ninitialvalueatarateslowerthanthatofaGBM.Bymeasuringtherateofthisdiﬀusivebehaviour\\nwe can identify the nature of the time series and thus detect whether it is mean-reverting.\\nWe will now outline a calculation, namely the Hurst Exponent, which helps us to characterise\\nthe stationarity of a time series.\\n10.2.1 Hurst Exponent\\nThe goal of the Hurst Exponent is to provide us with a scalar value that will help us to identify\\n(within the limits of statistical estimation) whether a series is mean reverting, random walking\\nor trending.\\nThe idea behind the Hurst Exponent calculation is that we can use the variance of a log price\\nseries to assess the rate of diﬀusive behaviour. For an arbitrary time lag τ, the variance of τis\\ngiven by:\\nVar(τ) =⟨|log(t+τ)−log(t)|2⟩ (10.4)\\nWhere the brackets ⟨and⟩refer to the average over all values of t.\\nThe idea is to compare the rate of diﬀusion to that of a GBM. In the case of a GBM, at large\\ntimes (i.e. when τis large) the variance of τis proportional to τ:', metadata={'source': '/tmp/tmpitadc2or', 'page': 97})",
                "0.31546807"
            ],
            [
                "Document(page_content='91\\n# Assuming you have run the above code to obtain ’amzn’!\\nprint (\"Hurst(AMZN): %s\" % hurst(amzn[’Adj Close’]))\\nThe output from the Hurst Exponent Python code is given below:\\nHurst(GBM): 0.502051910931\\nHurst(MR): 0.000166110248967\\nHurst(TR): 0.957701001252\\nHurst(AMZN): 0.454337476553\\nFrom this output we can see that the GBM possesses a Hurst Exponent, H, that is almost\\nexactly 0.5. The mean reverting series has Halmost equal to zero, while the trending series has\\nHclose to 1.\\nInterestingly, Amazon has Halso close to 0.5 indicating that it is similar to a GBM, at least\\nfor the sample period we’re making use of!\\n10.3 Cointegration\\nIt is actually very diﬃcult to ﬁnd a tradable asset that possesses mean-reverting behaviour. Eq-\\nuities broadly behave like GBMs and hence render the mean-reverting trade strategies relatively\\nuseless. However, there is nothing stopping us from creating a portfolio of price series that is\\nstationary. Hence we can apply mean-reverting trading strategies to the portfolio.\\nThesimplestformofmean-revertingtradestrategiesistheclassic\"pairstrade\", whichusually\\ninvolves a dollar-neutral long-short pair of equities. The theory goes that two companies in the\\nsame sector are likely to be exposed to similar market factors, which aﬀect their businesses.\\nOccasionally their relative stock prices will diverge due to certain events, but will revert to the\\nlong-running mean.\\nLet’s consider two energy sector equities Approach Resources Inc given by the ticker AREX\\nand Whiting Petroleum Corp given by the ticker WLL. Both are exposed to similar market\\nconditions and thus will likely have a stationary pairs relationship. We are now going to create\\nsome plots, using pandas and the Matplotlib libraries to demonstrate the cointegrating nature\\nof AREX and WLL. The ﬁrst plot (Figure 10.1) displays their respective price histories for the\\nperiod Jan 1st 2012 to Jan 1st 2013.\\nIf we create a scatter plot of their prices, we see that the relationship is broadly linear (see\\nFigure 10.2) for this period.\\nThe pairs trade essentially works by using a linear model for a relationship between the two\\nstock prices:\\ny(t) =βx(t) +ϵ(t) (10.7)\\nWherey(t)is the price of AREX stock and x(t)is the price of WLL stock, both on day t.\\nIf we plot the residuals ϵ(t) =y(t)−βx(t)(for a particular value of βthat we will determine\\nbelow) we create a new time series that, at ﬁrst glance, looks relatively stationary. This is given\\nin Figure 10.3.\\nWe will describe the code for each of these plots below.\\n10.3.1 Cointegrated Augmented Dickey-Fuller Test\\nIn order to statistically conﬁrm whether this series is mean-reverting we could use one of the tests\\nwe described above, namely the Augmented Dickey-Fuller Test or the Hurst Exponent. However,\\nneither of these tests will actually help us determine β, the hedging ratio needed to form the\\nlinear combination, they will only tell us whether, for a particular β, the linear combination is\\nstationary.\\nThisiswheretheCointegratedAugmentedDickey-Fuller(CADF)testcomesin. Itdetermines\\nthe optimal hedge ratio by performing a linear regression against the two time series and then\\ntests for stationarity under the linear combination.', metadata={'source': '/tmp/tmpitadc2or', 'page': 99})",
                "0.34008545"
            ],
            [
                "Document(page_content='85\\nconditional heteroskedasticity (ARCH) models, which are used to model the variance (i.e. the\\nvolatility) of time series over time. ARCH models use previous values (volatilities) of the time\\nseries to predict future values (volatilities). This is in contrast to stochastic volatility models,\\nwhich utilise more than one stochastic time series (i.e. multiple stochastic diﬀerential equations)\\nto model volatility.\\nAll of the raw historical price time series are discrete in that they contain ﬁnite values. In\\nthe ﬁeld of quantitative ﬁnance it is common to study continuous time series models. In partic-\\nular, the famous Geometric Brownian Motion , theHeston Stochastic Volatility model and the\\nOrnstein-Uhlenbeck model all represent continuous time series with diﬀering forms of stochastic\\nbehaviour. We will utilise these time series models in subsequent chapters to attempt to charac-\\nterise the behaviour of ﬁnancial time series in order to exploit their properties to create viable\\ntrading strategies.', metadata={'source': '/tmp/tmpitadc2or', 'page': 93})",
                "0.38436228"
            ]
        ]
    )
    return explanation
